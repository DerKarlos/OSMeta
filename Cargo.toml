[package]
name = "osmeta"
version = "0.1.0"
edition = "2021"
links = "openxr_loader"
build = "build.rs"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3


[dependencies]
bevy = { version = "0.13", features = ["jpeg"] }
flate2 = "1.0.28"
futures-core = "0.3.29"
futures-io = "0.3.29"
##gl am = "0"
bevy_screen_diagnostics = "0.5" ## { git = "https://github.com/oli-obk/bevy_screen_diagnostics.git" }
globe-rs = "0.1.8"
directories = "5.0.1"
async-fs = "2.1.0"
##bevy_web_asset = { git = "https://github.com/oli-obk/bevy_web_asset.git", branch = "user-agent" }  todo: what are the changes?
bevy_web_asset = { version = "0.8" }
##### big_space = { git = "https://github.com/oli-obk/big_space.git", branch = "world_query" }
bevy_embedded_assets = "0.10"
bevy_panorbit_camera = "0.14"

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { version = "0.3.22", default-features = false, features = [
    "Location",
] }

[target.'cfg(not(any(target_os="macos", target_arch = "wasm32")))'.dependencies]
bevy_oxr = { git = "https://github.com/awtterpip/bevy_oxr", optional = true }

[features]
xr = ["dep:bevy_oxr"]
default = ["xr"]


# we need to split our crate into a lib and a binary, because android targets don't want a binary.
# our binary is now just a tiny dummy thing that invokes the library's main function.
[lib]
name = "osmeta"
crate-type = ["staticlib", "cdylib", "lib"]

[lints.clippy]
type_complexity = "allow"
too_many_arguments = "allow"


[[example]]
name = "main"
path = "examples/main.rs"
