
________________________________________
SOLVED

2022-04-14
Bevy geht vielleicht gut, wenn man es vom Git clont.
Aber wie nutzt man es als crate in einem eigenen Git?
Bei mir kennt es dann kein ..default()
+                           ^^^^^^^ not found in this scope
Es geht mit      ..Default::default()    Aber da fehlt was im  Cargo.toml???
Ha! There is a commit about enabling that default shorthand
The v0.6.1 I used in my project is not the latest I use with the example %-)

2022-04-15
Beim WASM build läuft es zwar gut, zu sehen sind aber nur schräglinien. Mac-Problem?
Ok if it is a 2D/3D application

2022-04-16
How to update the clone (0.6.0 to 0.7.0)?
git reset --hard origin/latest

2022-04-19
Die Baumrückseite fehlt trotz double_sided: true
Es fehlte cull_mode: None,  // No cull of the back side.
Und was macht dann double_sided? // needed to have both sides equal lighted

2022-0423
Beim eignen create_tree stimmt die Beleuchtung nicht. Normals falsch? Wie sind die bei Quad? Auch nicht anders.
Aber bei 90 Grad müssen die Normals schon anders sein. Diesmal war das Rum-Probieren erfolgreich.
UND
Quad-Native ist der Baum ok, WASM auf der Rückseite blass (was mit double_sided?)
Mit den richtigen Normals geht das schon.

2022-0423
Bei meinem Baum gehen duplicate_vertices() sh.compute_flat_normals() nicht
// pub fn compute_flat_normals(&mut self)   Panics if Indices are set  ==>>  NOT set !!! todo: issue?
// compute only works with duplicate!
mesh.duplicate_vertices();   // ERROR bevy_pbr::material: Mesh is missing requested attribute: Vertex_Normal (MeshVertexAttributeId(1), pipeline type: Some("bevy_pbr::material::MaterialPipeline<bevy_pbr::pbr_material::StandardMaterial>"))
mesh.compute_flat_normals(); // thread 'TaskPool (0)' panicked at 'assertion failed: `(left == right)`  //   left: `8`,  //  right: `6`: MeshVertexAttributeId(1) has a different vertex count (6) than other attributes (8) in this mesh.', /Users/karlos/.cargo/registry/src/github.com-1ecc6299db9ec823/bevy_render-0.7.0/src/mesh/mesh/mod.rs:208:17



________________________________________
PROBLEMS


Bei WASM sind die Schatten der Bäume nicht Alpha-Durchsichtig.  In Discord... (auch bei wgpu?)

Läuft nicht auf dem iPhone/iPad? Wie ist es bei mac-Safari? Auch nicht! Kein Ground/Baum und nur 12 FPS

Es sind ohne Last nur 30 FPS. Limit 60 aufheben, wie? Bisher durch Quellcode-Ändern von rend3/wgpu

Mozilla: (<30 FPS)
- WEBGL_debug_renderer_info is deprecated in Firefox and will be removed. Please use RENDERER.
- WebGL warning: getSyncParameter: ClientWaitSync must return TIMEOUT_EXPIRED until control has returned to the user agent's main loop. (only warns once)
Mac-Safari:
- kein Ground/Baum und nur 12 FPS    ::OK but 2D only?:: https://niklasei.github.io/bevy_game_template/
Chrome: (40 FPS)
- 4 mal:  wasm_osmeta.js:1449 The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page.

________________________________________
BUILD

% cd ../OSMeta
OSMeta % cargo run
cargo run

Any Bevy app can be deployed to the web by running the following commands:
cargo build [--release] --target wasm32-unknown-unknown
wasm-bindgen                        --out-dir OUTPUT_DIR  --target web [BUILD_]TARGET_DIR
wasm-bindgen --out-name wasm_osmeta --out-dir wasm/target --target web target/wasm32-unknown-unknown/release/osmeta.wasm

build EXAMPLES:
cargo build --example headless_wasm --target wasm32-unknown-unknown --no-default-features
wasm-bindgen --out-dir examples/wasm/target --target web target/wasm32-unknown-unknown/debug/examples/headless_wasm.wasm

FROM: https://github.com/bevyengine/bevy/tree/latest/examples#wasm


If you are using a released version of bevy, you need to make sure you are viewing the correct version of the examples!
  Latest release:                https://github.com/bevyengine/bevy/tree/latest/examples
  Specific version, such as 0.4: https://github.com/bevyengine/bevy/tree/v0.4.0/examples

Update the clone:  git reset --hard origin/latest

To get more info for compiler/runtime errors, set (temporary) an environment variable:
export RUST_BACKTRACE=1

________________________________________
TODO / DOING /DONE

* Benutze statt println!! das: /Users/karlos/Public/bevy/examples/app/logs.rs
* Mal ein paar examples probieren:
  + bevy % cargo run --release --example rect
* Examples als eigenes Git-Project build-en
* Native und wasm
* bevy-book lesen
* git für OSMeta
* Inline "data:" scheint eigebaut zu sein: https://raw.githubusercontent.com/bevyengine/bevy/31bd4ecbbc81521340991a82f8f725cce7bdf79b/assets/models/SimpleSkin/SimpleSkin.gltf
* bevy_svg: Load and draw SVG-files in 2D and 3D -- https://github.com/Weasy666/bevy_svg
* Probiere die WASM-Beispiele: https://github.com/bevyengine/bevy/tree/latest/examples#wasm
* https://github.com/bevyengine/bevy/blob/main/examples/shader/shader_instancing.rs

* Nach "merge" nachtesten: https://github.com/bevyengine/bevy/pull/3987
* Engine-API definieren und realisieren für bevy und rend3 und ...
* README für OSMeta mit: Warum, Historie, Ziele, Wege, Tools, ...
    AssertLoad, WebXR,

* Frage, ob er mithelfen will: https://linuxrocks.online/@friend/108136609425833717
* Hexa-Tiles. Look also: bevy--bevy_ecs_tilemap-main
* Use as render framework: https://github.com/leetvr/hotham

________________________________________
thirdroom
ThreeJS GLB
welcome additional web or native clients
Matrix (/Element, habe ich)
Somenone kommented: There is A-Frame. I add: There is Hubs. Isn't it alike?

https://github.com/matrix-org/thirdroom
https://github.com/matrix-org/thirdroom/discussions/20

I was looking for an Open-Sourcd Federated Metaverse, hat the idea but did not know one.
WebAssembly to add interactivity -  I told you!


#########################

Unabhängigkeit des o2w vom renderer am Beispiel bevy

pbr_tile > material_tile&textures&materials > renderer_bevy > bevy
Ob man auf das Texturladen warten muß, steck im renderer_*

pbr_tile<T> für den Typ/Instanz des Renderers zum durchreichen an renderer_*
Color auch per <C>???

Nach dem O2W::new gibt es:
- load_pbr
- wait_texture_load ggf. als dummy
- textures_loaded vielleicht?
- get_texture damit renderer_* die tile bauen kann
